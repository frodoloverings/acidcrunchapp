import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { Tool } from '../types.js';
import Icon from './Icon.js';
import Tooltip from './Tooltip.js';
const ToolButton = ({ name, iconName, isActive, isDisabled, onClick, hotkey }) => (_jsx(Tooltip, { text: hotkey ? `${name} (${hotkey})` : name, position: "left", children: _jsx("button", { onClick: onClick, "aria-label": name, disabled: isDisabled, className: `p-2 rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-[#d1fe17] w-full h-10 flex items-center justify-center ${isActive ? 'bg-[#d1fe17]/80 text-black' : 'hover:bg-white/10 text-gray-300'} disabled:text-gray-600 disabled:bg-transparent disabled:cursor-not-allowed`, children: _jsx(Icon, { name: iconName, className: "w-6 h-6" }) }) }));
const RightToolbar = ({ onUndo, onRedo, canUndo, canRedo, onClear, onFocus, activeTool, onToolChange, context, t }) => {
    return (_jsxs("div", { className: "w-14 bg-[#1c1c1c] rounded-2xl p-2 shadow-2xl flex flex-col items-center gap-2 border border-[#262626]", children: [_jsx(ToolButton, { name: t('toolbar.right.undo'), iconName: "undo", onClick: onUndo, isDisabled: !canUndo, hotkey: "Ctrl+Z" }), _jsx(ToolButton, { name: t('toolbar.right.redo'), iconName: "redo", onClick: onRedo, isDisabled: !canRedo, hotkey: "Ctrl+Shift+Z" }), _jsx("div", { className: "w-full h-px bg-white/20 my-1" }), _jsx(ToolButton, { name: t('toolbar.right.selection'), iconName: "cursor", isActive: activeTool === Tool.Selection, onClick: () => onToolChange(Tool.Selection), hotkey: "V" }), _jsx(ToolButton, { name: t('toolbar.right.hand'), iconName: "hand", isActive: activeTool === Tool.Hand, onClick: () => onToolChange(Tool.Hand), hotkey: "H" }), context === 'editor' && (_jsx(Tooltip, { text: t('toolbar.right.focus'), position: "left", children: _jsx("button", { onClick: onFocus, className: `p-2 rounded-lg transition-colors duration-200 hover:bg-white/10 text-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-[#d1fe17] w-full h-10 flex items-center justify-center`, children: _jsx(Icon, { name: "focus", className: "w-6 h-6" }) }) })), _jsx("div", { className: "flex-grow" }), _jsx("div", { className: "w-full h-px bg-white/20 my-1" }), _jsx(ToolButton, { name: context === 'editor' ? t('toolbar.right.clear_sketches') : "Clear Canvas", iconName: "trash", onClick: onClear })] }));
};
export default RightToolbar;
